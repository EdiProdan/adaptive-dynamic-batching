data:
  input:
    text_dir: "data/input/text/"
    images_dir: "data/input/images/"
  output: "data/output/experimental_scenarios/"

spacy:
    model: "en_core_web_md"

evaluation:
    enabled: true
    #scenarios: ["high-precision", "moderate-connectivity", "comprehensive"]
#    scenarios: ["dev_a_precision", "dev_b_balanced", "dev_c_diverse"]
    scenarios: ["dev_a_precision"]
    runs_per_algorithm: 1
    metrics:
      - "total_time"
      - "batch_processing_time"
      - "conflict_frequency"
      - "throughput"
      - "memory_usage"
      - "cpu_utilization"
    output_dir: "data/evaluation/"

database:
  neo4j:
    uri: "bolt://localhost:7687"
    user: "neo4j"
    password: "research123"
    database: "research"

algorithms:
  baseline:
    name: "Static Sequential Batching Algorithm"
    description: "Traditional fixed-size batching for sequential data."
    parameters:
      batch_sizes: [50, 100]  # Smaller batches for more conflicts
      thread_counts: [2, 3, 4]  # Test different parallelism levels
      timeout: 300
      retry_attempts: 3
      hub_threshold: 5

  working_parallel:
    name: "Working Parallel Baseline"
    description: "Parallel processing baseline for thesis research"
    parameters:
      batch_size: 100
      thread_count: 3
      timeout: 120
      retry_attempts: 2

  apoc:
    name: "APOC-Style Parallel Batching Algorithm"
    description: "Industry standard parallel batching with retry logic"
    parameters:
      batch_size: 100  # Reduced for high-connectivity dataset
      max_workers: 1  # Start with sequential to establish baseline
      max_wait_time: 45
      retry_attempts: 5
      timeout: 600  # Increased timeout
      hub_threshold: 5
      parallel_batches: false
      iterative_processing: true

  adaptive:
    name: "Adaptive Dynamic Batching Algorithm"
    description: "Dynamic batching based on data characteristics."
    implementation: "AdaptiveBatchProcessor"
    parameters:
      min_batch_size: 10
      max_batch_size: 100
      adaptive_factor: 0.5

  conflict:
    name: "Realistic Conflict Resolution Algorithm"
    description: "Algorithm designed to handle conflicts in data processing."
    implementation: "ConflictResolutionProcessor"
    parameters:
      conflict_threshold: 0.1  # Adjust based on expected conflict rate
      retry_attempts: 3
      max_wait_time: 60
      batch_size: 50  # Smaller batches to manage conflicts effectively
      parallel_batches: true
      iterative_processing: true

  mix_and_batch:
    name: "Mix and Batch Parallel Algorithm"
    description: "Published parallel loading approach with conflict-free partitioning"
    num_partitions: 10  # Number of virtual partitions for nodes
    max_workers: 8      # Number of parallel threads
    batch_size: 1000    # Not used in partitioning, but for metrics
    hash_digits: 1      # Digits used for partition assignment
    hub_threshold: 5    # For conflict analysis
